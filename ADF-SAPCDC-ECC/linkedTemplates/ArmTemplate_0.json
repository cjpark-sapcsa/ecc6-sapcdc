{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "ADF-SAPCDC-ECC"
		},
		"adls4sapecc_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'adls4sapecc'"
		},
		"SAPCDC2ECC6_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'SAPCDC2ECC6'"
		},
		"SAPCDCS4H_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'SAPCDCS4H'"
		},
		"adls4sapecc_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://sapeccqas2adf.dfs.core.windows.net/"
		},
		"SAPCDC2ECC6_properties_typeProperties_clientId": {
			"type": "string",
			"defaultValue": "100"
		},
		"SAPCDC2ECC6_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "10steps2s4"
		},
		"SAPCDC2ECC6_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "20.160.178.48"
		},
		"SAPCDC2ECC6_properties_typeProperties_systemNumber": {
			"type": "string",
			"defaultValue": "00"
		},
		"SAPCDCS4H_properties_typeProperties_clientId": {
			"type": "string",
			"defaultValue": "100"
		},
		"SAPCDCS4H_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "s4h_ext"
		},
		"SAPCDCS4H_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "4.227.248.152"
		},
		"SAPCDCS4H_properties_typeProperties_systemNumber": {
			"type": "string",
			"defaultValue": "00"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/adls4sapecc')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "adls4sapecc datalake",
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('adls4sapecc_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('adls4sapecc_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ecc6ehp6-Win2-IP')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/s4hsapcdc')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SAPCDC2ECC6')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "ECC6 - SLT - CDC",
				"annotations": [],
				"type": "SapOdp",
				"typeProperties": {
					"clientId": "[parameters('SAPCDC2ECC6_properties_typeProperties_clientId')]",
					"language": "EN",
					"sncMode": false,
					"userName": "[parameters('SAPCDC2ECC6_properties_typeProperties_userName')]",
					"subscriberName": "ECC2ADFviaCDC",
					"password": {
						"type": "SecureString",
						"value": "[parameters('SAPCDC2ECC6_password')]"
					},
					"server": "[parameters('SAPCDC2ECC6_properties_typeProperties_server')]",
					"systemNumber": "[parameters('SAPCDC2ECC6_properties_typeProperties_systemNumber')]"
				},
				"connectVia": {
					"referenceName": "ecc6ehp6-Win2-IP",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/ecc6ehp6-Win2-IP')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SAPCDCS4H')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "SAPCDCS4H 2021FPs1",
				"annotations": [],
				"type": "SapOdp",
				"typeProperties": {
					"clientId": "[parameters('SAPCDCS4H_properties_typeProperties_clientId')]",
					"sncMode": false,
					"userName": "[parameters('SAPCDCS4H_properties_typeProperties_userName')]",
					"subscriberName": "s4hadfcdc",
					"password": {
						"type": "SecureString",
						"value": "[parameters('SAPCDCS4H_password')]"
					},
					"server": "[parameters('SAPCDCS4H_properties_typeProperties_server')]",
					"systemNumber": "[parameters('SAPCDCS4H_properties_typeProperties_systemNumber')]"
				},
				"connectVia": {
					"referenceName": "s4hsapcdc",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/s4hsapcdc')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/EPDDemoPODelta')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SAPCDCS4H",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SapOdpResource",
				"schema": [],
				"typeProperties": {
					"context": "ABAP_CDS",
					"objectName": "ZSEPMPODISPLAY$E"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SAPCDCS4H')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/S4HEPMPO')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SAPCDCS4H",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SapOdpResource",
				"schema": [],
				"typeProperties": {
					"context": "ABAP_CDS",
					"objectName": "SEPM_IPO$P"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SAPCDCS4H')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/S4HSalesOrderNo')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SAPCDCS4H",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SapOdpResource",
				"schema": [],
				"typeProperties": {
					"context": "SAPI",
					"objectName": "0COORDER_TEXT"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SAPCDCS4H')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SAPECC_FI_AR')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SAPCDC2ECC6",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SapOdpResource",
				"schema": [],
				"typeProperties": {
					"context": "SAPI",
					"objectName": "0FI_AR_4"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SAPCDC2ECC6')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SalesDocumentItems')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SAPCDCS4H",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SapOdpResource",
				"schema": [],
				"typeProperties": {
					"context": "ABAP_CDS",
					"objectName": "CSDSLSDOCITMDX1$F"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SAPCDCS4H')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/EPMPODelta')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "S4HEPMPO",
								"type": "DatasetReference"
							},
							"name": "S4HEPMPO"
						}
					],
					"sinks": [
						{
							"linkedService": {
								"referenceName": "adls4sapecc",
								"type": "LinkedServiceReference"
							},
							"name": "ADLS",
							"rejectedDataLinkedService": {
								"referenceName": "adls4sapecc",
								"type": "LinkedServiceReference"
							}
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(output(",
						"          PURCHASEORDERUUID as binary,",
						"          PURCHASEORDER as string,",
						"          SHORTTEXTGROUPUUID as binary,",
						"          SUPPLIERUUID as binary,",
						"          TRANSACTIONCURRENCY as string,",
						"          GROSSAMOUNTINTRANSACCURRENCY as decimal(19,2),",
						"          NETAMOUNTINTRANSACTIONCURRENCY as decimal(19,2),",
						"          TAXAMOUNTINTRANSACTIONCURRENCY as decimal(19,2),",
						"          PURCHASEORDERLIFECYCLESTATUS as string,",
						"          PURCHASEORDERAPPROVALSTATUS as string,",
						"          PURCHASEORDERCONFSTATUS as string,",
						"          PURCHASEORDERORDERINGSTATUS as string,",
						"          PURCHASEORDERINVOICINGSTATUS as string,",
						"          PURCHASEORDEROVERALLSTATUS as string,",
						"          CREATEDBYUSER as binary,",
						"          CREATIONDATETIME as decimal(28,7),",
						"          LASTCHANGEDBYUSER as binary,",
						"          LASTCHANGEDDATETIME as decimal(28,7)",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     staged: true,",
						"     enableCdc: false,",
						"     readMode: 'fullLoad',",
						"     format: 'sapObject',",
						"     partitionBy('roundRobin', 2),",
						"     keys: ['PURCHASEORDERUUID']) ~> S4HEPMPO",
						"S4HEPMPO sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'delta',",
						"     fileSystem: 'demo',",
						"     folderPath: 'staging',",
						"     mergeSchema: false,",
						"     autoCompact: false,",
						"     optimizedWrite: false,",
						"     vacuum: 0,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> ADLS"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/S4HEPMPO')]",
				"[concat(variables('factoryId'), '/linkedServices/adls4sapecc')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SalesDocumentItems')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "SalesDocumentItems",
								"type": "DatasetReference"
							},
							"name": "SalesDocumentItems"
						}
					],
					"sinks": [
						{
							"linkedService": {
								"referenceName": "adls4sapecc",
								"type": "LinkedServiceReference"
							},
							"name": "ADLSSalesDocs",
							"rejectedDataLinkedService": {
								"referenceName": "adls4sapecc",
								"type": "LinkedServiceReference"
							}
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(output(",
						"          SALESDOCUMENT as string,",
						"          SALESDOCUMENTITEM as string,",
						"          SDDOCUMENTCATEGORY as string,",
						"          SALESDOCUMENTTYPE as string,",
						"          SALESDOCUMENTITEMCATEGORY as string,",
						"          ISRETURNSITEM as string,",
						"          CREATIONDATE as string,",
						"          CREATIONTIME as string,",
						"          LASTCHANGEDATE as string,",
						"          SALESORGANIZATION as string,",
						"          DISTRIBUTIONCHANNEL as string,",
						"          DIVISION as string,",
						"          SALESGROUP as string,",
						"          SALESOFFICE as string,",
						"          INTERNATIONALARTICLENUMBER as string,",
						"          BATCH as string,",
						"          MATERIAL as string,",
						"          PRODUCT as string,",
						"          ORIGINALLYREQUESTEDMATERIAL as string,",
						"          MATERIALSUBSTITUTIONREASON as string,",
						"          MATERIALGROUP as string,",
						"          PRODUCTGROUP as string,",
						"          ADDITIONALMATERIALGROUP1 as string,",
						"          ADDITIONALMATERIALGROUP2 as string,",
						"          ADDITIONALMATERIALGROUP3 as string,",
						"          ADDITIONALMATERIALGROUP4 as string,",
						"          ADDITIONALMATERIALGROUP5 as string,",
						"          SOLDTOPARTY as string,",
						"          ADDITIONALCUSTOMERGROUP1 as string,",
						"          ADDITIONALCUSTOMERGROUP2 as string,",
						"          ADDITIONALCUSTOMERGROUP3 as string,",
						"          ADDITIONALCUSTOMERGROUP4 as string,",
						"          ADDITIONALCUSTOMERGROUP5 as string,",
						"          SHIPTOPARTY as string,",
						"          PAYERPARTY as string,",
						"          BILLTOPARTY as string,",
						"          SDDOCUMENTREASON as string,",
						"          SALESDOCUMENTDATE as string,",
						"          ORDERQUANTITY as decimal(20,3),",
						"          ORDERQUANTITYUNIT as string,",
						"          TARGETQUANTITY as decimal(20,3),",
						"          TARGETQUANTITYUNIT as string,",
						"          TARGETTOBASEQUANTITYDNMNTR as decimal(5,0),",
						"          TARGETTOBASEQUANTITYNMRTR as decimal(5,0),",
						"          ORDERTOBASEQUANTITYDNMNTR as decimal(5,0),",
						"          ORDERTOBASEQUANTITYNMRTR as decimal(5,0),",
						"          CONFDDELIVQTYINORDERQTYUNIT as decimal(20,3),",
						"          TARGETDELIVQTYINORDERQTYUNIT as decimal(20,3),",
						"          CONFDDELIVERYQTYINBASEUNIT as decimal(20,3),",
						"          BASEUNIT as string,",
						"          REQUESTEDQUANTITYINBASEUNIT as decimal(20,3),",
						"          ITEMGROSSWEIGHT as decimal(20,3),",
						"          ITEMNETWEIGHT as decimal(20,3),",
						"          ITEMWEIGHTUNIT as string,",
						"          ITEMVOLUME as decimal(20,3),",
						"          ITEMVOLUMEUNIT as string,",
						"          SERVICESRENDEREDDATE as string,",
						"          SALESDISTRICT as string,",
						"          CUSTOMERGROUP as string,",
						"          HDRORDERPROBABILITYINPERCENT as string,",
						"          ITEMORDERPROBABILITYINPERCENT as string,",
						"          SALESDOCUMENTRJCNREASON as string,",
						"          PRICINGDATE as string,",
						"          EXCHANGERATEDATE as string,",
						"          PRICEDETNEXCHANGERATE as decimal(22,5),",
						"          STATISTICALVALUECONTROL as string,",
						"          NETAMOUNT as decimal(19,2),",
						"          TRANSACTIONCURRENCY as string,",
						"          SALESORGANIZATIONCURRENCY as string,",
						"          NETPRICEAMOUNT as decimal(19,2),",
						"          NETPRICEQUANTITY as decimal(5,0),",
						"          NETPRICEQUANTITYUNIT as string,",
						"          TAXAMOUNT as decimal(19,2),",
						"          COSTAMOUNT as decimal(19,2),",
						"          SUBTOTAL1AMOUNT as decimal(19,2),",
						"          SUBTOTAL2AMOUNT as decimal(19,2),",
						"          SUBTOTAL3AMOUNT as decimal(19,2),",
						"          SUBTOTAL4AMOUNT as decimal(19,2),",
						"          SUBTOTAL5AMOUNT as decimal(19,2),",
						"          SUBTOTAL6AMOUNT as decimal(19,2),",
						"          SHIPPINGPOINT as string,",
						"          SHIPPINGTYPE as string,",
						"          DELIVERYPRIORITY as string,",
						"          INVENTORYSPECIALSTOCKTYPE as string,",
						"          REQUESTEDDELIVERYDATE as string,",
						"          SHIPPINGCONDITION as string,",
						"          DELIVERYBLOCKREASON as string,",
						"          PLANT as string,",
						"          STORAGELOCATION as string,",
						"          ROUTE as string,",
						"          INCOTERMSCLASSIFICATION as string,",
						"          INCOTERMSVERSION as string,",
						"          INCOTERMSTRANSFERLOCATION as string,",
						"          INCOTERMSLOCATION1 as string,",
						"          INCOTERMSLOCATION2 as string,",
						"          MINDELIVERYQTYINBASEUNIT as decimal(20,3),",
						"          UNLIMITEDOVERDELIVERYISALLOWED as string,",
						"          OVERDELIVTOLRTDLMTRATIOINPCT as decimal(18,1),",
						"          UNDERDELIVTOLRTDLMTRATIOINPCT as decimal(18,1),",
						"          PARTIALDELIVERYISALLOWED as string,",
						"          BINDINGPERIODVALIDITYSTARTDATE as string,",
						"          BINDINGPERIODVALIDITYENDDATE as string,",
						"          COMPLETIONRULE as string,",
						"          OUTLINEAGREEMENTTARGETAMOUNT as decimal(19,2),",
						"          BILLINGDOCUMENTDATE as string,",
						"          BILLINGCOMPANYCODE as string,",
						"          HEADERBILLINGBLOCKREASON as string,",
						"          ITEMBILLINGBLOCKREASON as string,",
						"          ITEMISBILLINGRELEVANT as string,",
						"          FISCALYEAR as string,",
						"          FISCALPERIOD as string,",
						"          CUSTOMERACCOUNTASSIGNMENTGROUP as string,",
						"          EXCHANGERATETYPE as string,",
						"          CURRENCY as string,",
						"          FISCALYEARVARIANT as string,",
						"          BUSINESSAREA as string,",
						"          PROFITCENTER as string,",
						"          ORDERID as string,",
						"          PROFITABILITYSEGMENT as string,",
						"          PROFITABILITYSEGMENT_2 as string,",
						"          CONTROLLINGAREA as string,",
						"          REFERENCESDDOCUMENT as string,",
						"          REFERENCESDDOCUMENTITEM as string,",
						"          REFERENCESDDOCUMENTCATEGORY as string,",
						"          ORIGINSDDOCUMENT as string,",
						"          ORIGINSDDOCUMENTITEM as string,",
						"          OVERALLSDPROCESSSTATUS as string,",
						"          OVERALLTOTALDELIVERYSTATUS as string,",
						"          OVERALLORDRELTDBILLGSTATUS as string,",
						"          TOTALCREDITCHECKSTATUS as string,",
						"          OVERALLSDDOCUMENTREJECTIONSTS as string,",
						"          OVERALLTOTALSDDOCREFSTATUS as string,",
						"          OVERALLSDDOCREFERENCESTATUS as string,",
						"          OVERALLDELIVCONFSTATUS as string,",
						"          OVERALLDELIVERYSTATUS as string,",
						"          DELIVERYBLOCKSTATUS as string,",
						"          BILLINGBLOCKSTATUS as string,",
						"          TOTALSDDOCREFERENCESTATUS as string,",
						"          SDDOCREFERENCESTATUS as string,",
						"          SDDOCUMENTREJECTIONSTATUS as string,",
						"          ITEMGENERALINCOMPLETIONSTATUS as string,",
						"          ITEMBILLINGINCOMPLETIONSTATUS as string,",
						"          PRICINGINCOMPLETIONSTATUS as string,",
						"          ITEMDELIVERYINCOMPLETIONSTATUS as string,",
						"          DELIVERYCONFIRMATIONSTATUS as string,",
						"          ORDERRELATEDBILLINGSTATUS as string,",
						"          SDPROCESSSTATUS as string,",
						"          TOTALDELIVERYSTATUS as string,",
						"          DELIVERYSTATUS as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     staged: true,",
						"     enableCdc: true,",
						"     readMode: 'fullAndIncrementalLoad',",
						"     keys:['SALESDOCUMENT','SALESDOCUMENTITEM'],",
						"     format: 'sapObject',",
						"     partitionBy('key',",
						"          0,",
						"          SALESDOCUMENT,",
						"          SALESDOCUMENTITEM",
						"     )) ~> SalesDocumentItems",
						"SalesDocumentItems sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'delta',",
						"     fileSystem: 'demo',",
						"     folderPath: 'staging/S4HANA',",
						"     mergeSchema: false,",
						"     autoCompact: false,",
						"     optimizedWrite: false,",
						"     vacuum: 0,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> ADLSSalesDocs"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SalesDocumentItems')]",
				"[concat(variables('factoryId'), '/linkedServices/adls4sapecc')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ZSEPMPOdisplay')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "EPDDemoPODelta",
								"type": "DatasetReference"
							},
							"name": "EPMPODisplay"
						}
					],
					"sinks": [
						{
							"linkedService": {
								"referenceName": "adls4sapecc",
								"type": "LinkedServiceReference"
							},
							"name": "ADSL",
							"rejectedDataLinkedService": {
								"referenceName": "adls4sapecc",
								"type": "LinkedServiceReference"
							}
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(output(",
						"          PURCHASEORDERUUID as binary,",
						"          PURCHASEORDER as string,",
						"          SHORTTEXTGROUPUUID as binary,",
						"          SUPPLIERUUID as binary,",
						"          TRANSACTIONCURRENCY as string,",
						"          GROSSAMOUNTINTRANSACCURRENCY as decimal(17,2),",
						"          NETAMOUNTINTRANSACTIONCURRENCY as decimal(17,2),",
						"          TAXAMOUNTINTRANSACTIONCURRENCY as decimal(17,2),",
						"          PURCHASEORDERLIFECYCLESTATUS as string,",
						"          PURCHASEORDERAPPROVALSTATUS as string,",
						"          PURCHASEORDERCONFSTATUS as string,",
						"          PURCHASEORDERORDERINGSTATUS as string,",
						"          PURCHASEORDERINVOICINGSTATUS as string,",
						"          PURCHASEORDEROVERALLSTATUS as string,",
						"          CREATEDBYUSER as binary,",
						"          CREATIONDATETIME as decimal(28,7),",
						"          LASTCHANGEDBYUSER as binary,",
						"          LASTCHANGEDDATETIME as decimal(28,7)",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     staged: true,",
						"     enableCdc: true,",
						"     readMode: 'fullAndIncrementalLoad',",
						"     keys:['PURCHASEORDERUUID'],",
						"     format: 'sapObject',",
						"     partitionBy('roundRobin', 2)) ~> EPMPODisplay",
						"EPMPODisplay sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'delta',",
						"     fileSystem: 'demo',",
						"     folderPath: 'staging/S4HANA',",
						"     mergeSchema: false,",
						"     autoCompact: false,",
						"     optimizedWrite: false,",
						"     vacuum: 0,",
						"     deletable:true,",
						"     insertable:true,",
						"     updateable:true,",
						"     upsertable:true,",
						"     keys:['PURCHASEORDER'],",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> ADSL"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/EPDDemoPODelta')]",
				"[concat(variables('factoryId'), '/linkedServices/adls4sapecc')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflowFIAR')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "SAPECC_FI_AR",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"linkedService": {
								"referenceName": "adls4sapecc",
								"type": "LinkedServiceReference"
							},
							"name": "sink1",
							"rejectedDataLinkedService": {
								"referenceName": "adls4sapecc",
								"type": "LinkedServiceReference"
							}
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     staged: true,",
						"     enableCdc: true,",
						"     readMode: 'fullAndIncrementalLoad',",
						"     keys:['BUKRS','FISCPER','BELNR','BUZEI','UPOSZ'],",
						"     format: 'sapObject') ~> source1",
						"source1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'delta',",
						"     fileSystem: 'demo',",
						"     mergeSchema: false,",
						"     autoCompact: false,",
						"     optimizedWrite: false,",
						"     vacuum: 0,",
						"     deletable:true,",
						"     insertable:false,",
						"     updateable:false,",
						"     upsertable:true,",
						"     keys:['BELNR'],",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SAPECC_FI_AR')]",
				"[concat(variables('factoryId'), '/linkedServices/adls4sapecc')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/s4hordernos')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "S4HSalesOrderNo",
								"type": "DatasetReference"
							},
							"name": "salesordernumber"
						}
					],
					"sinks": [
						{
							"linkedService": {
								"referenceName": "adls4sapecc",
								"type": "LinkedServiceReference"
							},
							"name": "salesordernosADSL",
							"rejectedDataLinkedService": {
								"referenceName": "adls4sapecc",
								"type": "LinkedServiceReference"
							}
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(output(",
						"          AUFNR as string,",
						"          AUART as string,",
						"          KOKRS as string,",
						"          KTEXT as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     staged: true,",
						"     enableCdc: true,",
						"     readMode: 'fullAndIncrementalLoad',",
						"     keys:['AUFNR'],",
						"     format: 'sapObject') ~> salesordernumber",
						"salesordernumber sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'delta',",
						"     fileSystem: 'demo',",
						"     folderPath: 'staging',",
						"     mergeSchema: false,",
						"     autoCompact: false,",
						"     optimizedWrite: false,",
						"     vacuum: 0,",
						"     deletable:true,",
						"     insertable:false,",
						"     updateable:true,",
						"     upsertable:true,",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> salesordernosADSL"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/S4HSalesOrderNo')]",
				"[concat(variables('factoryId'), '/linkedServices/adls4sapecc')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/EPMPOFullDelta')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "EPMPOFullDelta",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "EPMPODelta",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"S4HEPMPO": {},
									"ADLS": {}
								}
							},
							"staging": {
								"linkedService": {
									"referenceName": "adls4sapecc",
									"type": "LinkedServiceReference"
								},
								"folderPath": "demo/staging"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine",
							"continuationSettings": {
								"customizedCheckpointKey": "78963da4-2e7e-4085-963d-4df3c85e5e98"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/EPMPODelta')]",
				"[concat(variables('factoryId'), '/linkedServices/adls4sapecc')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ZEPMPODelta')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ZEPMPODelta",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "ZSEPMPOdisplay",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"EPMPODisplay": {},
									"ADSL": {}
								}
							},
							"staging": {
								"linkedService": {
									"referenceName": "adls4sapecc",
									"type": "LinkedServiceReference"
								},
								"folderPath": "demo/staging/S4HANA"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine",
							"continuationSettings": {
								"customizedCheckpointKey": "3840f9a2-b463-4e50-b5e7-24974a0e3040"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/ZSEPMPOdisplay')]",
				"[concat(variables('factoryId'), '/linkedServices/adls4sapecc')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/salesordernumber')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "salesordernumbers",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "s4hordernos",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"salesordernumber": {},
									"salesordernosADSL": {}
								}
							},
							"staging": {
								"linkedService": {
									"referenceName": "adls4sapecc",
									"type": "LinkedServiceReference"
								},
								"folderPath": "demo/staging"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine",
							"continuationSettings": {
								"customizedCheckpointKey": "b73126db-00e7-45b3-ad52-da7344b9dc50"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/s4hordernos')]",
				"[concat(variables('factoryId'), '/linkedServices/adls4sapecc')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CSDSLSDOCITMDX')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CSDSLSDOCITMDX",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "SalesDocumentItems",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"SalesDocumentItems": {},
									"ADLSSalesDocs": {}
								}
							},
							"staging": {
								"linkedService": {
									"referenceName": "adls4sapecc",
									"type": "LinkedServiceReference"
								},
								"folderPath": "demo/staging/S4HANA"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine",
							"continuationSettings": {
								"customizedCheckpointKey": "c6f4ad39-4fd4-4d7e-84a1-bacdf7e7d2e9"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/SalesDocumentItems')]",
				"[concat(variables('factoryId'), '/linkedServices/adls4sapecc')]"
			]
		}
	]
}